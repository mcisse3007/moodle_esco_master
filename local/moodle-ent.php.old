<?php // $Id: moodle-ent.php,v 0.2 2010/12/10 $

/**
 * modifie rapidement par Patrick Pollet
 ( pp@patrickpollet.net)
 * (c) INSA de Lyon Avril 2012
 * pour etre utilisable avec Moodle 2.X
 */

require_once('../config.php');
//require_once($CFG->libdir.'/blocklib.php');
//require_once($CFG->dirroot.'/course/lib.php');
//require_once($CFG->libdir.'/pagelib.php');

//important pour creer les liens abolsus vers les cours et le site
$moodle_url=$CFG->wwwroot;


// Fonction permettant d'afficher les cours
function display_courses($courses, $detail) {
    if (empty($courses)) {
        print_simple_box(get_string('nocourses','my'),'center');
        print_simple_box(get_string('nocourses','my'),'generalbox',NULL);
    } else {
        RUNN_print_overview($courses, $detail);
    }
}


// Fonction permettant d'afficher les activites recentes d'un cours
function display_recent_activities($activities) {
    global $CFG;

    foreach($activities as $activity) {
        // Affichage du cours concerne par les modifications
        $course_name = $activity['course']->fullname;
        $course_id = $activity['course']->id;
        $course_url = "course/view.php?id=$course_id";
        print('<dt class="course">' . html_link($course_url, $course_name) . '</dt>');

        // Recuperation et affichage des infos concernant le module modifie
        //$logs = $activity['logs'];
        //foreach($logs as $log) {
        //    $module         = $log->module;
        //    $module_info_id = $log->info;
        //    $module_url     = 'mod/' . $module . '/' . $log->url;
        //    $module_info = get_module_info($module, $module_info_id);
        //    $module_name = $module_info->name;
        //        echo '<dd class="course">' . html_link($module_url, $module_name) . '</dd>';
        //}
    }

}

// Fonction permettant de recuperer les cours dans lesquels l'utilisateur joue un role
function get_enrolled_courses($username) {
    global $DB;

    // Preparation de la requete
    $sql  = 'SELECT distinct c.id , c.shortname , c.fullname , ula.timeaccess , c.sortorder , cat.path';
    $sql .= ' FROM mdl_course c';
    $sql .= ' LEFT JOIN (mdl_role_assignments ra, mdl_context x, mdl_user u, mdl_user_lastaccess ula, mdl_course_categories cat)';
    $sql .= ' ON u.id=ula.userid AND c.id=ula.courseid WHERE u.id = ra.userid AND x.id = ra.contextid AND cat.id = c.category';
    $sql .= ' AND u.username = ? AND x.instanceid = c.id AND x.contextlevel= 50';

    // Execution de la requete
    $courses = $DB->get_records_sql($sql, array($username));

    return $courses;
}

// Fonction permettant de recuperer les logs des modules modifies depuis
// la date specifiee
function get_course_mod_log($course_id, $time) {
    global $DB;

    // Recuperation des modules modifies
    $table  = 'log';
    $select = "course = $course_id AND time >= $time AND module <> 'label' AND action IN ('add','update') AND cmid <> 0";
    $logs   = $DB->get_records_select($table, $select, null, '', 'module, url, info');

    return $logs;
}
 
// Fonction permettant de recuperer les logs des modules modifies recemment
// dans les cours
function get_courses_mod_logs($courses) {
    global $DB;

    // Tableau assoicant les cours et leurs activites recentes
    $mod_logs_by_courses = array( );
    foreach($courses as $course) {
        // Recuperation du dernier acces utilisateur
        $last_access = $course->timeaccess;

        // Recuperation des changements effectues dans le cours depuis le dernier acces
        $course_id = $course->id;
        $course_logs = get_course_mod_log($course_id, $last_access);
        if($course_logs == null) {
            continue;
        }
        
        // Association du cours et des modifications
        $mod_logs_by_courses[$course_id] = array( 'course' => $course, 'logs' => $course_logs ); 
    }
    return $mod_logs_by_courses;
}

// Fonction permettant de recuperer les informations sur une entree de module
function get_module_info($table, $id) {
    global $DB;

    // Recuperation du nom de l'entree dans la table du module
    $select = "id = $id";
    $module_info = $DB->get_record_select($table, $select, null, 'name');

    return $module_info;
}

// Fonction permettant de recuperer les cours en libre acces
function get_self_enrol_course() {
    global $DB;
    
    // Recuperation des ids des cours en acces anonyme
    $table  = 'enrol';
    $select = 'enrol = \'self\'';
    $enrol_self = $DB->get_records_select($table, $select, null, '', 'courseid');
    if($enrol_self == null) {
        return null;
    }

    // Recuperation des ids issues de la requete
    $ids_array = array();
    foreach($enrol_self as $enrol) {
       array_push($ids_array, $enrol->courseid); 
    }

    // Recuperation des cours en acces anonyme
    $table  = 'course';
    $field  = 'id';
    $courses = $DB->get_records_list($table, $field, $ids_array, 'fullname ASC');

    return $courses;
}

// Fonction permettant de generer un lien HTML pour Moodle
function html_link($url, $link_name) {
    global $CFG;
    return '<a target="_blank" href="' . $CFG->wwwroot . '/' . $url . '">' . format_string($link_name) . '</a>';
}

// Fonction supprimant le cours du site Moodle de la liste de cours.
function remove_site_course($courses) {
    $site = get_site();
    if (array_key_exists($site->id,$courses))
    {
        unset($courses[$site->id]);
    }
    return $courses;
}

// copie de la function course/lib/print_overview avec quelques modifications
// de mise en forme
function RUNN_print_overview($courses, $detail=false) {
    global $CFG, $USER, $DB;
    $htmlarray = array();

     // KFN : Mis en commentaire car parfois long à charger et dépasse le timeout du portlet
    // Les details des cours ne sont charges qu'au besoin
    //if ($detail && $modules = $DB->get_records('modules')) {
    //    foreach ($modules as $mod) {
    //        if (file_exists(dirname(dirname(__FILE__)).'/mod/'.$mod->name.'/lib.php')) {
    //            include_once(dirname(dirname(__FILE__)).'/mod/'.$mod->name.'/lib.php');
    //            $fname = $mod->name.'_print_overview';
    //            if (function_exists($fname)) {
    //                $fname($courses,$htmlarray);
    //            }
    //        }
    //    }
    //}

    foreach ($courses as $course) {
        $course_url = "course/view.php?id=$course->id";
        $course_name = $course->fullname;
        print('<dt class="course">' . html_link($course_url, $course_name) . '</dt>');

        // Affichage du detail ?
        if ($detail && array_key_exists($course->id,$htmlarray)) {
            foreach ($htmlarray[$course->id] as $modname => $html) {
                echo '<dd class="course">'.$html.'</dd>';
            }
        }

    }
}

// Fonction permettant de mettre a jour la date de derniere acces de chaque cours
// present dans la liste
function update_last_access($courses) {
    global $USER;

    foreach ($courses as $c) {
        if (isset($USER->lastcourseaccess[$c->id])) {
                $courses[$c->id]->lastaccess = $USER->lastcourseaccess[$c->id];
            } else {
                $courses[$c->id]->lastaccess = 0;
            }
    }
    return $courses;
}
?>

<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>Moodle</title>
        <link rel="stylesheet" href="./moodle-ent/css/jquery-ui.css" />
        <link rel="stylesheet" href="./moodle-ent/css/moodle-ent.css" />
        <script src="./moodle-ent/js/jquery.min.1.9.1.js"></script>
        <script src="./moodle-ent/js/jquery-ui.min.1.10.2.js"></script>
        <script type="text/javascript"> 
            $(function() { $("#tabs").hide(); });
        </script>
    </head>
    <body>
        <div class="moodle-courses">
            <div class="portlet-section">
                <img title="Chargement" id="loading" src="./moodle-ent/img/ajax-loading.gif" />
                <div id="tabs" class="portlet-section-body">
		    <ul>
                      <li><a href="#tabs-1"><img width="32" src="./moodle-ent/img/bookmark-new.png"/>Mes cours Moodle</a></li>
                      <li><a href="#tabs-2"><img width="32" src="./moodle-ent/img/document-new.png"/>Cours Moodle en acc&egrave;s libre</a></li>
                      <li><a href="#tabs-3"><img width="32" src="./moodle-ent/img/document-new.png"/>Activit&eacute;s r&eacute;centes</a></li>
                    </ul>
                    <div id="tabs-1">
                      <dl>

<?php
$moodle_link = '<a href="' . $CFG->wwwroot .'" target="_blank">Acc&eacute;der directement &agrave; Moodle</a>';

print('<dt class="course">' . $moodle_link . '</dt>');

$systemcontext = get_context_instance(CONTEXT_SYSTEM);

$PAGE->set_url('/local/moodle-ent.php');
$PAGE->set_context($systemcontext);


$uid = $_GET['uid'];
$anuser = $DB->get_record("user", array("username"=>$uid));

if ($anuser) {
    $mymoodlestr = get_string('mymoodle','my');

    /// The main overview
    $courses_limit = 21;
    if (isset($CFG->mycoursesperpage)) {
        $courses_limit = $CFG->mycoursesperpage;
    }

    $morecourses = false;

    // Recuperation des cours dans lequel l'utilisateur participe
    $courses = enrol_get_users_courses( $anuser->id, true, 'id, fullname', 'fullname ASC' );
    $courses = remove_site_course($courses);
    $courses = update_last_access($courses);
    
    // Affichage des cours
    display_courses($courses, true);

    print('</dl></div>');
    print('<div id="tabs-2"><dl>');
    print('<dt class="course">' . $moodle_link . '</dt>');

    // Cours en libre acces
    $guest_courses = get_self_enrol_course(); 
    $guest_courses = remove_site_course($guest_courses);
    $guest_courses = update_last_access($guest_courses);
    
    // Affichage des cours
    display_courses($guest_courses, false);

    print('</dl></div>');
    print('<div id="tabs-3"><dl>');

    // Recuperation des cours (avec dernier acces) dans lequel l'utilisateur a un role
    $enrolled_courses = get_enrolled_courses($uid);
    
    // Recuperation des modifications par cours
    $recent_activities = get_courses_mod_logs($enrolled_courses);
    display_recent_activities($recent_activities);

} else {
    // utilisateur inconnu , ne pas donner l'info, juste pas de cours
    echo $OUTPUT->box(get_string('nocourses','my'),'generalbox',NULL);
}

?>
				    </dl>
			    </div>
		    </div>
	    </div>
       </div>
    </body>
    <script type="text/javascript"> 
	$(function() { 
                $( "#loading" ).hide( );
		$( "#tabs" ).show( ); 
		$( "#tabs" ).tabs( ); 

         });
   </script>
   <script src="./moodle-ent/js/domain.js"></script>
</html>
